# -*- mode: ruby -*-
# vi: set ft=ruby :
# The Vagrant ClearLinux plugin is required:
# https://github.com/AntonioMeireles/vagrant-guests-clearlinux
# Clearlinux box doesn't havre a vagrant user - the user is "clear"

# Path to the local users public key file in $HOME/.ssh
# We use it later in the shell provisioner to populate authorized_keys
ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
adminvm_karlvkey = File.readlines("#{Dir.home}/Documents/Projects/vagrant/certs/adminvm_karlv_id_rsa.pub").first.strip
adminvm_rootkey = File.readlines("#{Dir.home}/Documents/Projects/vagrant/certs/adminvm_root_id_rsa.pub").first.strip


Vagrant.configure(2) do |config|
  config.vm.box = "AntonioMeireles/ClearLinux"
  # Trying different versions
  #config.vm.box_version = "<version>"
  config.vm.define "clearlinux"
  config.vm.hostname = "clearlinux"

  config.vm.usable_port_range= 2800..2900
  # [--nictype<1-N> Am79C970A|Am79C973| 82540EM|82543GC|82545EM| virtio] 
  # nic_type doesn't matter
  config.vm.network "private_network", ip: "172.16.0.202"
  config.vm.network "private_network", ip: "172.10.0.202"
  

  # Do some port mapping - Vagrant will try 2222 for SSH if it is in use it will grab the first 
  # unused port in the above range
  config.vm.network "forwarded_port", guest: 22, host: 2920
  config.vm.network "forwarded_port", guest: 80, host: 2921
  config.vm.network "forwarded_port", guest: 8080, host: 2922

  # Disable Proxy plugin - using local mirrors - proxies cause grief
  config.proxy.enabled = false

  #config.ssh.forward_agent = true

  config.vm.provider "virtualbox" do |vb|
   vb.customize ["modifyvm", :id, "--groups", "/Testing" ]
   vb.name = "clear"
   vb.cpus = "1"
   vb.memory = "512"
  end # end Provider

  config.vm.provision "Setup shell environment", type: "shell" do |s|
    s.inline = <<-SHELL

    # Add the public keys "adminvm" is a VM I use for testing things like Ansible
    # Clearlinux box doesn't havre a vagrant user - the user is "clear"
    mkdir /root/.ssh
    chmod 700 /root/.ssh
    touch /root/.ssh/authorized_keys
   
    #echo "Appending user@Laptop keys to root and vagrant authorized_keys"
    #echo #{ssh_pub_key} >> /home/clear/.ssh/authorized_keys
    #echo #{ssh_pub_key} >> /root/.ssh/authorized_keys
   
    echo "Appending AdminVM keys to root and vagrant authorized_keys"
    echo #{adminvm_karlvkey} >> /home/clear/.ssh/authorized_keys
    echo #{adminvm_karlvkey} >> /root/.ssh/authorized_keys
    echo #{adminvm_rootkey} >> /home/clear/.ssh/authorized_keys
    echo #{adminvm_rootkey} >> /root/.ssh/authorized_keys

    SHELL
  end ###--- End Provisioner

  ### External shell scripts for configuration
  # Copy in a script to install certs
  config.vm.provision :file do |file|
    file.source = "../../certs/certificates.sh" 
    file.destination =  "/home/clear/installcerts.sh"
  end  
      
  # - Basic bootstrasp - install Docker and Clear Containers
  config.vm.provision "bootstrap", type: "shell" do |script|
     script.path = "setup/bootstrap.sh"
  end

end # end configure(2)
